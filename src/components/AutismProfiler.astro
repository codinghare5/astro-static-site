---
import StripeCheckoutBtn from '../components/StripeCheckoutBtn.astro'
---
<script src="https://js.stripe.com/v3/"></script>
<div class="layout">
  <article class="content">
  <div class="intro">
	<header>
		<h2>Autism Profiler</h2>
	</header>
	<main>
		<slot />
		<select id="currency">
			<option value="gbp">GBP</option>
			<option value ="usd">USD</option>
		</select>
		<StripeCheckoutBtn>Submit and Pay</StripeCheckoutBtn>
		<span id="redirect-warning">This button will redirect you to the payment page.</span>
		
		<script>
			var stripe = Stripe("pk_test_51JbpHHHpeW5ReVH549OdzaS9nlscB68G1XGArNolH3tBTiuO49NpaaZZLLctZtZVf5qwGVOIYv0WeHMt4IMiEz8o00T8selSwh");
			var prices;

			async function getPrices() {
				const result = await fetch('http://localhost:3001/store')
				const prices = await result.json()

            	return prices;
			}

			const stripeRedirect = (priceId) => {
				stripe.redirectToCheckout({
					lineItems: [{
						price: priceId, // Replace with the ID of your price
					quantity: 1,
					}],
					mode: "payment",
					successUrl: "http://localhost:3000/success",
					cancelUrl: "http://localhost:3000/autism-profiler",
				}).then(function (result) {
					const warning = document.getElementById('redirect-warning')
					warning.innerText = result.error.message
				});
			}

			const currencyPicker = document.querySelector("#currency");
			var checkoutButton = document.querySelector("#checkout-button");
			getPrices().then(result => {
				prices = result
				var priceId = prices['items']['autism-profiler'].filter(currency => currency.iso === currencyPicker.value)[0].priceId
				console.log(priceId)
				checkoutButton.addEventListener("click", () => stripeRedirect(priceId))
				
				currencyPicker.addEventListener('change', () => {
					if( prices&&prices!= null ){
						var priceId = prices['items']['autism-profiler'].filter(currency => currency.iso === currencyPicker.value)[0].priceId
						console.log(priceId)

						checkoutButton.removeEventListener('click', () => stripeRedirect(priceId))
						checkoutButton.addEventListener("click", () => stripeRedirect(priceId))
					// "price_1JbqVUHpeW5ReVH54HQpLlI3"
					}
				})
			})
		</script>
	</main>
  </div>
  </article>
</div>

<style>
.hero-image {
  width: 100vw;
  object-fit: cover;
  object-position: center;
  margin-top: 2rem;
  margin-bottom: 4rem;
  max-width: 1280px;
}

@media (max-width: 50em) {
  .hero-image {
	height: 260px;
  margin-top: 0;
  margin-bottom: 2rem;
  }
}

.content {
  margin-top: 3rem;
  margin-bottom: 8rem;
}

.content :global(main > * + *) {
  margin-top: 1rem;
}

.content :global(h2) {
  margin-top: 4rem;
}

header {
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
  justify-content: center;

  padding-bottom: 2rem;
  margin-bottom: 2rem;
}

.title,
.author,
.publish-date {
  margin: 0;
}

.publish-date,
.author {
  color: var(--theme-text-lighter);
}

.title {
  font-size: 2.25rem;
  font-weight: 700;
}

#redirect-warning {
	margin-left: 1rem;
  font-size: 0.8rem;
  color: var(--color-gray-300);
}

.intro {
	padding: 1rem;
	margin-bottom: 2rem;
	/* border-bottom: 4px solid var(--theme-divider); */
	box-shadow: 10px 10px 20px rgba(0, 0, 0, 0.2);
	border-radius: 3px;
	background: rgba(255, 255, 255, 0.1);
	border-top: 1px solid rgba(255, 255, 255, 0.5);
	border-left: 1px solid rgba(255, 255, 255, 0.5);
	border-left: 1px solid rgba(255, 255, 255, 0.5);
	backdrop-filter: blur(5px);
}

.intro > * {
	margin: 0;
}

.intro > p {
	margin-block: 0.75rem;
	color: var(--color-gray-200);
}

h2 {
	font-weight: 700;
	color: white;
}
</style>
