---
export interface Props {
	segments: string;
	segmentReasons: string[];
}

const { segments, segmentReasons } = Astro.props;
const reasonToDashValue = (reason) => reason.toLowerCase().replace(/\s+/g, "-");
const contactHiddenInputSegmentsString = segments.join(' ')
---
<style>
.trust {
	background-color: var(--segment-blue-100);
	border-radius: 5px;
}
</style>
<script>
	function toggleField(hideObj,showObj){
		hideObj.disabled=true;        
		hideObj.style.display='none';
		showObj.disabled=false;   
		showObj.style.display='inline';
		showObj.focus();
	}
</script>
<article class="trust w-100">
	<form class="m-3 mb-16">
		<div class="flex justify-center pt-3 pb-6">
			<h3 class="text-2xl">Contact Us</h3>
		</div>
		<input type="hidden" name="segment" value={contactHiddenInputSegmentsString}>
		<fieldset class="flex md:flex-row mobile:flex-col gap-x-4">
			<div class="flex flex-col flex-grow">
				<label for="contact-name">Full name:</label>
				<input class="border rounded-lg focus:shadow-outline" id="contact-name" name="contact-name" type="text"/>
			</div>
		</fieldset>
		<fieldset class="flex md:flex-row mobile:flex-col gap-x-4">
			<div class="flex flex-col flex-grow">
				<label for="contact-email">Best email:</label>
				<input class="border rounded-lg focus:shadow-outline" id="contact-email" name="contact-email" type="email"/>
			</div>
			<div class="flex flex-col flex-grow">
				<label for="contact-phone">Phone:</label>
				<input class="border rounded-lg focus:shadow-outline" id="contact-phone" name="contact-phone" type="tel"/>
			</div>
		</fieldset>
		<fieldset class="flex md:flex-row mobile:flex-col gap-x-4">
			<div class="flex flex-col flex-grow">
				<label for="contact-reason">I am contacting you about:</label>
				<select class="border rounded-lg focus:shadow-outline" 
							onchange="if(this.options[this.selectedIndex].id=='other-reason'){
										toggleField(this,this.nextSibling);
										this.selectedIndex='0';
									}"
							name="contact-reason" id="contact-reason">
					{segmentReasons.map(reason => <option value={reasonToDashValue(reason)}>{reason}</option> )}
					<option id="other-reason" value="">Specify...</option>
				</select>
				<input class="border rounded-lg focus:shadow-outline" id="contact-reason-other"
							name="contact-reason" style="display:none;" disabled="disabled" 
							onblur="if(this.value==''){toggleField(this,this.previousSibling);}" type="text">
			</div>
		</fieldset>
		<fieldset class="flex md:flex-row mobile:flex-col gap-x-4">
			<div class="flex flex-col flex-grow">
				<label for="contact-reason">Preferred contact way:</label>
				<select class="border rounded-lg focus:shadow-outline" 
							name="contact-reason" id="contact-reason">
					<option id="other-reason" value="">By email</option>
					<option id="other-reason" value="">By phone</option>
				</select>
			</div>
		</fieldset>
		<fieldset class="flex md:flex-row mobile:flex-col gap-x-4">
			<label>
				<input type="checkbox" value=""/>
				<span class="ml-1">Subscribe to the newsletter</span>
			</label>
		</fieldset>
		<fieldset class="flex flex-col flex-grow">
			<label for="contact-message">Your message:</label>
			<textarea class="border rounded-lg focus:shadow-outline" id="contact-message" name="contact-message" rows="5"/>
		</fieldset>
		<button id="contact-submit" class="action2 my-4" type="button">Submit</button>
	</form>
</article>