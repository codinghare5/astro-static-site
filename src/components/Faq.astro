---
export interface Props {
    data: any;
}
const { data } = Astro.props;
const questions = [
							'What does a neurodiversity profile involve?',
							'How long does a neurodiversity profile take?',
							'Do I need to have a diagnosis of a neurodiverse condition?',
							'Will a neurodiversity profile cost me?',
							'What happens after my neurodiversity profile has been completed?'
						]
---
<style>
	/* Tab content - closed */
	.tab-content {
	max-height: 0;
	-webkit-transition: max-height .35s;
	-o-transition: max-height .35s;
	transition: max-height .35s;
	}
	/* :checked - resize to full height */
	.tab input:checked ~ .tab-content {
	max-height: 100vh;
	}
	/* Label formatting when open */
	.tab input:checked + label{
	/*@apply text-xl p-5 border-l-2 border-indigo-500 bg-gray-100 text-indigo*/
	font-size: 1.25rem; /*.text-xl*/
	padding: 1.25rem; /*.p-5*/
	border-left-width: 2px; /*.border-l-2*/
	border-color: #6574cd; /*.border-indigo*/
	background-color: #f8fafc; /*.bg-gray-100 */
	color: #6574cd; /*.text-indigo*/
	}
	/* Icon */
	.tab label::after {
	float:right;
	right: 0;
	top: 0;
	display: block;
	width: 1.5em;
	height: 1.5em;
	line-height: 1.5;
	font-size: 1.25rem;
	text-align: center;
	-webkit-transition: all .35s;
	-o-transition: all .35s;
	transition: all .35s;
	}
	/* Icon formatting - closed */
	.tab input[type=checkbox] + label::after {
	content: "+";
	font-weight:bold; /*.font-bold*/
	border-width: 1px; /*.border*/
	border-radius: 9999px; /*.rounded-full */
	border-color: #b8c2cc; /*.border-grey*/
	}
	.tab input[type=radio] + label::after {
	content: "\25BE";
	font-weight:bold; /*.font-bold*/
	border-width: 1px; /*.border*/
	border-radius: 9999px; /*.rounded-full */
	border-color: #b8c2cc; /*.border-grey*/
	}
	/* Icon formatting - open */
	.tab input[type=checkbox]:checked + label::after {
	transform: rotate(315deg);
	background-color: #6574cd; /*.bg-indigo*/
	color: #f8fafc; /*.text-grey-lightest*/
	}
	.tab input[type=radio]:checked + label::after {
	transform: rotateX(180deg);
	background-color: #6574cd; /*.bg-indigo*/
	color: #f8fafc; /*.text-grey-lightest*/
	}
</style>

<article class="flex justify-center">
	<section class="flex flex-col justify-center items-center">
		<h3 class="text-xl font-medium my-3">Frequently asked questions</h3>
		<div class="max-w-screen-md w-full md:w-3/5 mx-auto p-4">
			<div class="bg-white shadow-md">
			{Object.entries(data).map(([question, answer], index) => {
				return <div class="tab w-full overflow-hidden border-t">
					<input class="absolute opacity-0" id={`tab-single-${index}`} type="radio" name="tabs2">
					<label class="block p-5 leading-normal cursor-pointer" for={`tab-single-${index}`}>{question}</label>
					<div class="tab-content overflow-hidden border-l-2 bg-gray-100 border-indigo-500 leading-normal">
						<p class="p-5">{answer}</p>
					</div>
				</div>
			})}
			</div>
		</div>
	</section>
</article>

<script>
/* Optional Javascript to close the radio button version by clicking it again */
var myRadios = document.getElementsByName('tabs2');
var setCheck;
var x = 0;
for(x = 0; x < myRadios.length; x++){
	myRadios[x].onclick = function(){
		if(setCheck != this){
			setCheck = this;
		}else{
			this.checked = false;
			setCheck = null;
		}
	};
}
</script>